(function ($, sp) { "use strict"; var ruleCode; Date.prototype.DateAdd = function (strInterval, Number) { var dtTmp = this; switch (strInterval) { case 's': return new Date(Date.parse(dtTmp) + (1000 * Number)); case 'n': return new Date(Date.parse(dtTmp) + (60000 * Number)); case 'h': return new Date(Date.parse(dtTmp) + (3600000 * Number)); case 'd': return new Date(Date.parse(dtTmp) + (86400000 * Number)); case 'w': return new Date(Date.parse(dtTmp) + ((86400000 * 7) * Number)); case 'q': return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number * 3, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds()); case 'm': return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds()); case 'y': return new Date((dtTmp.getFullYear() + Number), dtTmp.getMonth(), dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds()) } }Date.prototype.DateDiff = function (strInterval, dtEnd) { var dtStart = this; if (typeof dtEnd == 'string') { dtEnd = sp.parseDate(dtEnd) } switch (strInterval) { case 's': return parseInt((dtEnd - dtStart) / 1000); case 'n': return parseInt((dtEnd - dtStart) / 60000); case 'h': return parseInt((dtEnd - dtStart) / 3600000); case 'd': return parseInt((dtEnd - dtStart) / 86400000); case 'w': return parseInt((dtEnd - dtStart) / (86400000 * 7)); case 'm': return (dtEnd.getMonth() + 1) + ((dtEnd.getFullYear() - dtStart.getFullYear()) * 12) - (dtStart.getMonth() + 1); case 'y': return dtEnd.getFullYear() - dtStart.getFullYear() } }var fieldMap = {}; $.spFormComponents = { label: { init: function () { var $html = $('<div class="sp-custmerform-component" data-type="label" ><i  class="fa fa-font"></i>标 题</div>'); return $html }, render: function ($component) { $component[0].dfop = $component[0].dfop || { title: '标 题', type: "label", proportion: '1', }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: "标 题" })) }, property: function ($component) { var dfop = $component[0].dfop; var $html = $(".sp-custmerform-designer-layout-right .sp-scroll-box"); var _html = ''; _html += '<div class="sp-component-title">组件标题</div>'; _html += '<div class="sp-component-control"><input id="sp_component_title" type="text" class="form-control" placeholder="必填项"/></div>'; _html += '<div class="sp-component-control"><div id="sp_component_verify"></div></div>'; _html += '<div class="sp-component-title">所占行比例</div>'; _html += '<div class="sp-component-control"><div id="sp_component_proportion"></div></div>'; $html.html(_html); $html.find('#sp_component_title').val(dfop.title); $html.find('#sp_component_title').on('input propertychange', function () { var value = $(this).val(); dfop.title = value; $component.find('.sp-compont-title span').text(value) }); $('#sp_component_proportion').spselect({ data: [{ id: '1', text: '1' }, { id: '2', text: '1/2' }, { id: '3', text: '1/3' }, { id: '4', text: '1/4' }, { id: '5', text: '1/5' }, { id: '6', text: '1/6' }], placeholder: false, value: 'id', text: 'text', select: function (item) { if (!!item) { dfop.proportion = item.id } else { dfop.proportion = '1' } $component.css({ 'width': 100 / parseInt(dfop.proportion) + '%' }) } }); $('#sp_component_proportion').spselectSet(dfop.proportion) }, renderTable: function (compont, $row) { $row.find('.sp-form-item-title').remove(); $row.append("<span>" + compont.title + "<span>"); $row.css({ 'padding': '0', 'line-height': '38px', 'text-align': 'center', 'font-size': '20px', 'font-weight': 'bold', 'color': '#333' }) } }, html: { init: function () { var $html = $('<div class="sp-custmerform-component" data-type="html" ><i  class="fa fa-file-o"></i>富文本</div>'); return $html }, render: function ($component) { $component[0].dfop = $component[0].dfop || { title: '', type: "html", proportion: '1', }; $component.html(getComponentRowHtml({ name: "富文本", text: "富文本" })) }, property: function ($component) { var dfop = $component[0].dfop; var $html = $(".sp-custmerform-designer-layout-right .sp-scroll-box"); var _html = ''; _html += '<div class="sp-component-title">文本内容</div>'; _html += '<div class="sp-component-control"><textarea id="sp_component_title" type="text" style="height:300px;" class="form-control" placeholder="必填项"></textarea></div>'; _html += '<div class="sp-component-control"><div id="sp_component_verify"></div></div>'; _html += '<div class="sp-component-title">所占行比例</div>'; _html += '<div class="sp-component-control"><div id="sp_component_proportion"></div></div>'; $html.html(_html); $html.find('#sp_component_title').val(htmlDecode(dfop.title)); $html.find('#sp_component_title').on('input propertychange', function () { var value = $(this).val(); dfop.title = htmlEncode(value) }); $('#sp_component_proportion').spselect({ data: [{ id: '1', text: '1' }, { id: '2', text: '1/2' }, { id: '3', text: '1/3' }, { id: '4', text: '1/4' }, { id: '5', text: '1/5' }, { id: '6', text: '1/6' }], placeholder: false, value: 'id', text: 'text', select: function (item) { if (!!item) { dfop.proportion = item.id } else { dfop.proportion = '1' } $component.css({ 'width': 100 / parseInt(dfop.proportion) + '%' }) } }); $('#sp_component_proportion').spselectSet(dfop.proportion) }, renderTable: function (compont, $row) { $row.find('.sp-form-item-title').remove(); $row.html(htmlDecode(compont.title)) } }, text: { init: function () { var $html = $('<div class="sp-custmerform-component" data-type="text" ><i  class="fa fa-italic"></i>文本框</div>'); return $html }, render: function ($component) { $component[0].dfop = $component[0].dfop || { title: '文本框', type: "text", table: '', field: "", proportion: '1', verify: '', isHide: '0', dfvalue: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: "文本框" })) }, property: function ($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component, verifyDatalist); var _html = ''; _html += '<div class="sp-component-title">是否隐藏</div>'; _html += '<div class="sp-component-control"><div id="sp_component_isHide"></div></div>'; _html += '<div class="sp-component-title">默认值<i title="仅在添加数据时默认填入" class="help fa fa-question-circle"></i></div>'; _html += '<div class="sp-component-control"><input id="sp_component_dfvalue" type="text" class="form-control" placeholder="无则不填"/></div>'; $html.append(_html); $('#sp_component_isHide').spselect({ placeholder: false, data: [{ id: '0', text: '否' }, { id: '1', text: '是' }], value: 'id', text: 'text', select: function (item) { if (!!item) { dfop.isHide = item.id } else { dfop.isHide = '0' } } }); $('#sp_component_isHide').spselectSet(dfop.isHide); $html.find('#sp_component_dfvalue').val(dfop.dfvalue); $html.find('#sp_component_dfvalue').on('input propertychange', function () { var value = $(this).val(); dfop.dfvalue = value }) }, renderTable: function (compont, $row) { var $compont = $('<input id="' + compont.id + '" type="text" class="form-control" />'); $compont.val(compont.dfvalue); $row.append($compont); if (compont.isHide == '1') { $row.hide() } return $compont }, renderQuery: function (compont, $row) { var $compont = $('<input id="' + compont.id + '" type="text" class="form-control" />'); $row.append($compont); return $compont } }, textarea: { init: function () { var $html = $('<div class="sp-custmerform-component" data-type="textarea" ><i class="fa fa-align-justify"></i>文本区</div>'); return $html }, render: function ($component) { $component[0].dfop = $component[0].dfop || { title: '文本区', type: "textarea", table: '', field: "", proportion: '1', verify: '', height: '100', dfvalue: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: "文本区" })) }, property: function ($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component, verifyDatalist2); var _html = ''; _html += '<div class="sp-component-title">区域高度</div>'; _html += '<div class="sp-component-control"><input id="sp_component_height" type="text" class="form-control" /></div>'; _html += '<div class="sp-component-title">默认值<i title="仅在添加数据时默认填入" class="help fa fa-question-circle"></i></div>'; _html += '<div class="sp-component-control"><input id="sp_component_dfvalue" type="text" class="form-control" placeholder="无则不填"/></div>'; $html.append(_html); $html.find('#sp_component_height').val(dfop.height); $html.find('#sp_component_height').on('input propertychange', function () { var value = $(this).val(); dfop.height = value }); $html.find('#sp_component_dfvalue').val(dfop.dfvalue); $html.find('#sp_component_dfvalue').on('input propertychange', function () { var value = $(this).val(); dfop.dfvalue = value }) }, renderTable: function (compont, $row) { var $compont = $('<textarea id="' + compont.id + '"  class="form-control" style="height: ' + compont.height + 'px;" />'); $compont.val(compont.dfvalue); $row.append($compont); return $compont }, renderQuery: function (compont, $row) { var $compont = $('<input id="' + compont.id + '" type="text" class="form-control" />'); $row.append($compont); return $compont } }, texteditor: { init: function () { var $html = $('<div class="sp-custmerform-component" data-type="texteditor" ><i class="fa fa-edit"></i>编辑器</div>'); return $html }, render: function ($component) { $component[0].dfop = $component[0].dfop || { title: '编辑器', type: "texteditor", table: '', field: "", proportion: '1', verify: '', height: '200', dfvalue: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: "编辑器" })) }, property: function ($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component, verifyDatalist2); var _html = ''; _html += '<div class="sp-component-title">区域高度</div>'; _html += '<div class="sp-component-control"><input id="sp_component_height" type="text" class="form-control" /></div>'; _html += '<div class="sp-component-title">默认值<i title="仅在添加数据时默认填入" class="help fa fa-question-circle"></i></div>'; _html += '<div class="sp-component-control"><input id="sp_component_dfvalue" type="text" class="form-control" placeholder="无则不填"/></div>'; $html.append(_html); $html.find('#sp_component_height').val(dfop.height); $html.find('#sp_component_height').on('input propertychange', function () { var value = $(this).val(); dfop.height = value }); $html.find('#sp_component_dfvalue').val(dfop.dfvalue); $html.find('#sp_component_dfvalue').on('input propertychange', function () { var value = $(this).val(); dfop.dfvalue = value }) }, renderTable: function (compont, $row) { var $compont = $('<div id="' + compont.id + '" type="text/plain" style="height: ' + compont.height + 'px;"></div>'); $row.append($compont); $compont[0].ue = UE.getEditor(compont.id); if (compont.dfvalue != '') { $compont[0].ue.ready(function () { $compont[0].ue.setContent(compont.dfvalue) }) } return $compont }, renderQuery: function (compont, $row) { var $compont = $('<input id="' + compont.id + '" type="text" class="form-control" />'); $row.append($compont); return $compont } }, radio: { init: function () { var $html = $('<div class="sp-custmerform-component" data-type="radio" ><i class="fa fa-circle-thin"></i>单选框</div>'); return $html }, render: function ($component) { $component[0].dfop = $component[0].dfop || { title: '单选项', type: "radio", table: '', field: "", proportion: '1', dataSource: '0', dataSourceId: '', itemCode: '', dfvalue: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: "单选项" })) }, property: function ($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component); var _html = ''; _html += '<div class="sp-component-title">数据来源</div>'; _html += '<div class="sp-component-control"><div id="sp_component_dataSource"></div></div>'; _html += '<div class="sp-component-title">数据选项</div>'; _html += '<div class="sp-component-control" id="sp_component_dataItemCode1"><div id="sp_component_dataItemCode"></div></div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId"></div></div>'; _html += '<div class="sp-component-title dataSourceId" style="display:none;">显示字段</div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId1"></div></div>'; _html += '<div class="sp-component-title dataSourceId" style="display:none;">保存字段</div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId2"></div></div>'; _html += '<div class="sp-component-title">默认值<i title="仅在添加数据时默认填入" class="help fa fa-question-circle"></i></div>'; _html += '<div class="sp-component-control"><div id="sp_component_dfvalue"></div></div>'; $html.append(_html); setDatasource(dfop) }, renderTable: function (compont, $row) { var $compont = $('<div class="radio"></div>'); if (compont.dataSource == '0') { sp.clientdata.getAllAsync('dataItem', { code: compont.itemCode, callback: function (dataes) { $.each(dataes, function (id, item) { var $point = $('<label><input name="' + compont.id + '" value="' + item.value + '"' + (compont.dfvalue == item.value ? "checked" : "") + ' type="radio">' + item.text + '</label>'); $compont.append($point) }) } }) } else { var vlist = compont.dataSourceId.split(','); sp.clientdata.getAllAsync('sourceData', { code: vlist[0], callback: function (data) { $.each(data, function (id, item) { var $point = $('<label><input name="' + compont.id + '" value="' + item[vlist[2]] + '"' + (compont.dfvalue == item[vlist[2]] ? "checked" : "") + ' type="radio">' + item[vlist[1]] + '</label>'); $compont.append($point) }) } }) } $row.append($compont); return $compont }, renderQuery: function (compont, $row) { var $compont = $('<div class="radio"></div>'); if (compont.dataSource == '0') { sp.clientdata.getAllAsync('dataItem', { code: compont.itemCode, callback: function (dataes) { $.each(dataes, function (id, item) { var $point = $('<label><input name="' + compont.id + '" value="' + item.value + '"' + (compont.dfvalue == item.value ? "checked" : "") + ' type="radio">' + item.text + '</label>'); $compont.append($point) }) } }) } else { var vlist = compont.dataSourceId.split(','); sp.clientdata.getAllAsync('sourceData', { code: vlist[0], callback: function (data) { $.each(data, function (id, item) { var $point = $('<label><input name="' + compont.id + '" value="' + item[vlist[2]] + '"' + (compont.dfvalue == item[vlist[2]] ? "checked" : "") + ' type="radio">' + item[vlist[1]] + '</label>'); $compont.append($point) }) } }) } $row.append($compont); return $compont } }, checkbox: { init: function () { var $html = $('<div class="sp-custmerform-component" data-type="checkbox" ><i class="fa fa-square-o"></i>多选框</div>'); return $html }, render: function ($component) { $component[0].dfop = $component[0].dfop || { title: '多选项', type: "checkbox", table: '', field: "", proportion: '1', dataSource: '0', dataSourceId: '', itemCode: '', dfvalue: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: "多选项" })) }, property: function ($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component); var _html = ''; _html += '<div class="sp-component-title">数据来源</div>'; _html += '<div class="sp-component-control"><div id="sp_component_dataSource"></div></div>'; _html += '<div class="sp-component-title">数据选项</div>'; _html += '<div class="sp-component-control" id="sp_component_dataItemCode1"><div id="sp_component_dataItemCode"></div></div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId"></div></div>'; _html += '<div class="sp-component-title dataSourceId" style="display:none;">显示字段</div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId1"></div></div>'; _html += '<div class="sp-component-title dataSourceId" style="display:none;">保存字段</div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId2"></div></div>'; _html += '<div class="sp-component-title">默认值<i title="仅在添加数据时默认填入" class="help fa fa-question-circle"></i></div>'; _html += '<div class="sp-component-control"><div id="sp_component_dfvalue"></div></div>'; $html.append(_html); setDatasource(dfop) }, renderTable: function (compont, $row) { var $compont = $('<div class="checkbox"></div>'); if (compont.dataSource == '0') { sp.clientdata.getAllAsync('dataItem', { code: compont.itemCode, callback: function (dataes) { $.each(dataes, function (id, item) { var $point = $('<label><input name="' + compont.id + '" value="' + item.value + '"' + (compont.dfvalue == item.value ? "checked" : "") + ' type="checkbox">' + item.text + '</label>'); $compont.append($point) }) } }) } else { var vlist = compont.dataSourceId.split(','); sp.clientdata.getAllAsync('sourceData', { code: vlist[0], callback: function (data) { $.each(data, function (id, item) { var $point = $('<label><input name="' + compont.id + '" value="' + item[vlist[2]] + '"' + (compont.dfvalue == item[vlist[2]] ? "checked" : "") + ' type="checkbox">' + item[vlist[1]] + '</label>'); $compont.append($point) }) } }) } $row.append($compont); return $compont }, renderQuery: function (compont, $row) { var $compont = $('<div class="checkbox"></div>'); if (compont.dataSource == '0') { sp.clientdata.getAllAsync('dataItem', { code: compont.itemCode, callback: function (dataes) { $.each(data, function (id, item) { var $point = $('<label><input name="' + compont.id + '" value="' + item.value + '"' + (compont.dfvalue == item.value ? "checked" : "") + ' type="checkbox">' + item.text + '</label>'); $compont.append($point) }) } }) } else { var vlist = compont.dataSourceId.split(','); sp.clientdata.getAllAsync('sourceData', { code: vlist[0], callback: function (data) { $.each(data, function (id, item) { var $point = $('<label><input name="' + compont.id + '" value="' + item[vlist[2]] + '"' + (compont.dfvalue == item[vlist[2]] ? "checked" : "") + ' type="checkbox">' + item[vlist[1]] + '</label>'); $compont.append($point) }) } }) } $row.append($compont); return $compont } }, select: { init: function () { var $html = $('<div class="sp-custmerform-component" data-type="select" ><i class="fa fa-caret-square-o-right"></i>下拉框</div>'); return $html }, render: function ($component) { $component[0].dfop = $component[0].dfop || { title: '下拉框', type: "select", table: '', field: "", proportion: '1', verify: '', dataSource: '0', dataSourceId: '', relation: "", relation_field: "", itemCode: '', dfvalue: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: "下拉框" })) }, property: function ($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component, verifyDatalist2); var _html = ''; _html += '<div class="sp-component-title">数据来源</div>'; _html += '<div class="sp-component-control"><div id="sp_component_dataSource"></div></div>'; _html += '<div class="sp-component-title">数据选项</div>'; _html += '<div class="sp-component-control" id="sp_component_dataItemCode1"><div id="sp_component_dataItemCode"></div></div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId"></div></div>'; _html += '<div class="sp-component-title dataSourceId" style="display:none;">显示字段</div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId1"></div></div>'; _html += '<div class="sp-component-title dataSourceId" style="display:none;">保存字段</div>'; _html += '<div class="sp-component-control dataSourceId" style="display:none;" ><div id="sp_component_dataSourceId2"></div></div>'; _html += '<div class="sp-component-title sp_component_relation" style="display:none;">上一级联</div>'; _html += '<div class="sp-component-control sp_component_relation" style="display:none;" ><div id="sp_component_relation"></div></div>'; _html += '<div class="sp-component-title sp_component_relation_field" style="display:none;">关联字段</div>'; _html += '<div class="sp-component-control sp_component_relation_field" style="display:none;" ><div id="sp_component_relation_field"></div></div>'; _html += '<div class="sp-component-title">默认值<i title="仅在添加数据时默认填入" class="help fa fa-question-circle"></i></div>'; _html += '<div class="sp-component-control"><div id="sp_component_dfvalue"></div></div>'; $html.append(_html); setDatasource(dfop); var organizes = []; var $parent = $component.parent(); $parent.find('.sp-compont-item').each(function () { var compontItem = $(this)[0].dfop; if (compontItem.type == 'select' && compontItem.id != dfop.id) { var point = { id: compontItem.id, text: compontItem.title }; organizes.push(point) } }); $('#sp_component_relation').spselect({ data: organizes, value: 'id', text: 'text', select: function (item, type) { if (!!item) { dfop.relation = item.id; $('#sp_component_relation_field').spselectSet(dfop.relation_field || dfop.dataSourceId.split(',')[1]); $('.sp_component_relation_field').show() } else { dfop.relation = ''; dfop.relation_field = ''; $('#sp_component_relation_field').spselectSet(dfop.relation_field)$('.sp_component_relation_field').hide() } } }).spselectSet(dfop.relation) }, renderTable: function (compont, $row) { var $compont = $('<div id="' + compont.id + '"></div>'); $row.append($compont); if (compont.dataSource == '0') { $compont.spDataItemSelect({ allowSearch: true, code: compont.itemCode }).spselectSet(compont.dfvalue) } else { var vlist = compont.dataSourceId.split(','); if (compont.relation != "" && compont.relation_field != "") { $compont.spselect({ select: undefined, allowSearch: true }); function register() { if ($('#' + compont.relation).length > 0) { $('#' + compont.relation).on('change', function () { var value = $(this).spselectGet(); var par = { code: vlist[0], strWhere: compont.relation_field + ' = \'' + value + '\' ', queryJson: '{}' }sp.httpAsync('GET', top.$.rootUrl + '/LR_SystemModule/DataSource/GetDataTable', par, function (data) { if (data) { $compont.spselectRefresh({ value: vlist[2], text: vlist[1], title: vlist[1], data: data }) } })}) }else { setTimeout(function () { register() }, 100) } } register() }else{ $compont.spDataSourceSelect({ allowSearch: true, code: vlist[0], value: vlist[2], text: vlist[1] }).spselectSet(compont.dfvalue) } }return $compont }, renderQuery: function(compont, $row) { var $compont = $('<div id="' + compont.id + '"></div>'); $row.append($compont); if (compont.dataSource == '0') { $compont.spDataItemSelect({ allowSearch: true, code: compont.itemCode }).spselectSet(compont.dfvalue) } else { var vlist = compont.dataSourceId.split(','); $compont.spDataSourceSelect({ allowSearch: true, code: vlist[0], value: vlist[2], text: vlist[1] }).spselectSet(compont.dfvalue) } return $compont } }, datetime: { init: function() { var $html = $('<div class="sp-custmerform-component" data-type="datetime" ><i class="fa fa-calendar"></i>日期框</div>'); return $html }, render: function($component) { $component[0].dfop = $component[0].dfop || { title: '日期框', type: "datetime", table: '', field: "", proportion: '1', verify: '', dateformat: '0', dfvalue: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: '日期框' })) }, property: function($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component, verifyDatalist2); var _html = ''; _html += '<div class="sp-component-title">日期格式</div>'; _html += '<div class="sp-component-control"><div id="sp_component_dateformat"></div></div>'; _html += '<div class="sp-component-title">默认值<i title="仅在添加数据时默认填入" class="help fa fa-question-circle"></i></div>'; _html += '<div class="sp-component-control"><div id="sp_component_dfvalue"></div></div>'; $html.append(_html); $('#sp_component_dateformat').spselect({ data: [{ id: '0', text: '仅日期' }, { id: '1', text: '日期和时间' }], value: 'id', text: 'text', placeholder: false, select: function (item) { dfop.dateformat = item.id } }).spselectSet(dfop.dateformat); $('#sp_component_dfvalue').spselect({ data: [{ id: '0', text: '昨天' }, { id: '1', text: '今天' }, { id: '2', text: '明天' }], value: 'id', text: 'text', select: function (item) { if (!!item) { dfop.dfvalue = item.id } else { dfop.dfvalue = '' } } }).spselectSet(dfop.dfvalue) }, renderTable: function(compont, $row) { var dateformat = compont.dateformat == '0' ? 'yyyy-MM-dd' : 'yyyy-MM-dd HH:mm'; var datedefault = ""; var datetime = new Date(); switch (compont.dfvalue) { case "0": datedefault = datetime.DateAdd('d', -1); break; case "1": datedefault = datetime.DateAdd('d', 0); break; case "2": datedefault = datetime.DateAdd('d', 1); break }datedefault = sp.formatDate(datedefault, dateformat.replace(/H/g, 'h')); var $compont = $('<input value="' + datedefault + '" id="' + compont.id + '" onClick="WdatePicker({dateFmt:\'' + dateformat + '\',qsEnabled:false,isShowClear:false,isShowOK:false,isShowToday:false,onpicked:function(){$(\'#' + compont.id + '\').trigger(\'change\');}})"  type="text" class="form-control sp-input-wdatepicker" />'); $row.append($compont); return $compont } }, datetimerange: { init: function() { var $html = $('<div class="sp-custmerform-component" data-type="datetimerange" ><i class="fa fa-calendar"></i>日期区间</div>'); return $html }, render: function($component) { $component[0].dfop = $component[0].dfop || { title: '日期区间', type: "datetimerange", table: '', field: "", proportion: '1', verify: '', startTime: '', endTime: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: '日期区间' })) }, property: function($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component, verifyDatalist2); var _html = ''; _html += '<div class="sp-component-title">开始日期</div>'; _html += '<div class="sp-component-control"><div id="sp_component_startTime"></div></div>'; _html += '<div class="sp-component-title">结束日期</div>'; _html += '<div class="sp-component-control"><div id="sp_component_endTime"></div></div>'; $html.append(_html); var datatimes = []; var $parent = $component.parent(); $parent.find('.sp-compont-item').each(function () { var compontItem = $(this)[0].dfop; if (compontItem.type == 'datetime') { var point = { id: compontItem.id, text: compontItem.title }; datatimes.push(point) } }); $('#sp_component_startTime').spselect({ data: datatimes, select: function (item) { if (!!item) { dfop.startTime = item.id } } }).spselectSet(dfop.startTime); $('#sp_component_endTime').spselect({ data: datatimes, select: function (item) { if (!!item) { dfop.endTime = item.id } } }).spselectSet(dfop.endTime) }, renderTable: function(compont, $row) { var $compont = $('<input id="' + compont.id + '" type="text" class="form-control" />'); function register() { if ($('#' + compont.startTime).length > 0 && $('#' + compont.endTime).length > 0) { $('#' + compont.startTime).on('change', function () { var st = $(this).val(); var et = $('#' + compont.endTime).val(); if (!!st && !!et) { var diff = sp.parseDate(st).DateDiff('d', et) + 1; $compont.val(diff) } }); $('#' + compont.endTime).on('change', function () { var st = $('#' + compont.startTime).val(); var et = $(this).val(); if (!!st && !!et) { var diff = sp.parseDate(st).DateDiff('d', et) + 1; $compont.val(diff) } }) } else { setTimeout(function () { register() }, 50) } } if (!!compont.startTime && compont.endTime) { register() } $row.append($compont); return $compont }, renderQuery: function(compont, $row) { var $compont = $('<input id="' + compont.id + '" type="text" class="form-control" />'); $row.append($compont); return $compont } }, encode: { init: function() { var $html = $('<div class="sp-custmerform-component" data-type="encode" ><i class="fa fa-barcode"></i>编 码</div>'); return $html }, render: function($component) { $component[0].dfop = $component[0].dfop || { title: '编 码', type: "encode", table: '', field: "", proportion: '1', rulecode: '', isHide: '0', }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: "编 码" })) }, property: function($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component); var _html = ''; _html += '<div class="sp-component-title">单据规则</div>'; _html += '<div class="sp-component-control"><div id="sp_component_rulecode"></div></div>'; $html.append(_html); $('#sp_component_rulecode').spselect({ value: 'F_EnCode', text: 'F_FullName', title: 'F_FullName', allowSearch: true, select: function (item) { if (!!item) { dfop.rulecode = item.F_EnCode } else { dfop.rulecode = '' } } }).spselectSet(dfop.rulecode); if (!!ruleCode) { $('#sp_component_rulecode').spselectRefresh({ data: ruleCode }) } else { sp.httpAsync('GET', top.$.rootUrl + '/LR_SystemModule/CodeRule/GetList', {}, function (data) { ruleCode = data; $('#sp_component_rulecode').spselectRefresh({ data: ruleCode }) }) } }, renderTable: function(compont, $row) { var $compont = $('<input id="' + compont.id + '" type="text" readonly class="form-control" />'); sp.httpAsync('GET', top.$.rootUrl + '/LR_SystemModule/CodeRule/GetEnCode', { code: compont.rulecode }, function (data) { if (!$compont.val()) { $compont.val(data) } }); $row.append($compont); return $compont }, renderQuery: function(compont, $row) { var $compont = $('<input id="' + compont.id + '" type="text" class="form-control" />'); $row.append($compont); return $compont } }, organize: { init: function() { var $html = $('<div class="sp-custmerform-component" data-type="organize" ><i  class="fa fa-coffee"></i>单位组织</div>'); return $html }, render: function($component) { $component[0].dfop = $component[0].dfop || { title: '单位组织', type: "organize", table: '', field: "", proportion: '1', relation: "", dataType: 'user' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: '单位组织' })) }, property: function($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component, verifyDatalist2); var _html = ''; _html += '<div class="sp-component-title">类型选择</div>'; _html += '<div class="sp-component-control"><div id="sp_component_dataType"></div></div>'; _html += '<div class="sp-component-title sprelation">单位组织控件级联-上一级</div>'; _html += '<div class="sp-component-control sprelation"><div id="sp_component_relation"></div></div>'; $html.append(_html); var organizes = []; var $parent = $component.parent(); $parent.find('.sp-compont-item').each(function () { var compontItem = $(this)[0].dfop; if (compontItem.type == 'organize' && compontItem.id != dfop.id) { var point = { id: compontItem.id, text: compontItem.title, type: compontItem.dataType }; organizes.push(point) } }); $('#sp_component_relation').spselect({ data: organizes, value: 'id', text: 'text', select: function (item, type) { if (!!item) { dfop.relation = item.id } else if (type !== 'refresh') { dfop.relation = '' } } })$('#sp_component_dataType').spselect({ data: [{ id: 'company', text: '公司' }, { id: 'department', text: '部门' }, { id: 'user', text: '人员' }], value: 'id', text: 'text', placeholder: false, select: function (item) { dfop.dataType = item.id; switch (dfop.dataType) { case "user": var tmpData = []; $.each(organizes, function (id, item) { if (item.type == 'department') { tmpData.push(item) } }); $('#sp_component_relation').spselectRefresh({ data: tmpData }).spselectSet(dfop.relation); $('.sprelation').show(); break; case "department": var tmpData = []; $.each(organizes, function (id, item) { if (item.type == 'company') { tmpData.push(item) } }); $('#sp_component_relation').spselectRefresh({ data: tmpData }).spselectSet(dfop.relation); $('.sprelation').show(); break; case "company": $('.sprelation').hide(); break } } }).spselectSet(dfop.dataType) }, renderTable: function(compont, $row) { var $compont = $('<div id="' + compont.id + '" ></div>'); $row.append($compont); switch (compont.dataType) { case "user": if (compont.relation != "") { $compont.spselect({ value: 'F_UserId', text: 'F_RealName', title: 'F_RealName', allowSearch: true }); function register() { if ($('#' + compont.relation).length > 0) { $('#' + compont.relation).on('change', function () { var value = $(this).spselectGet(); if (value == "") { $compont.spselectRefresh({ url: '', data: [] }) } else { $compont.spselectRefresh({ url: top.$.rootUrl + '/LR_OrganizationModule/User/GetList', param: { departmentId: value } }) } }) } else { setTimeout(function () { register() }, 100) } } register() } else { $compont.spformselect({ layerUrl: top.$.rootUrl + '/LR_OrganizationModule/User/SelectOnlyForm', layerUrlW: 400, layerUrlH: 300, dataUrl: top.$.rootUrl + '/LR_OrganizationModule/User/GetListByUserIds' }) } break; case "department": $compont.spselect({ type: 'tree', allowSearch: true }); if (compont.relation != "") { function register() { if ($('#' + compont.relation).length > 0) { $('#' + compont.relation).on('change', function () { var value = $(this).spselectGet(); $compont.spselectRefresh({ url: top.$.rootUrl + '/LR_OrganizationModule/Department/GetTree', param: { companyId: value } }) }) } else { setTimeout(function () { register() }, 100) } } register() } else { $compont.spselectRefresh({ url: top.$.rootUrl + '/LR_OrganizationModule/Department/GetTree', param: {} }) } break; case "company": $compont.spCompanySelect({}); break }return $compont }, renderQuery: function(compont, $row) { var $compont = $('<div id="' + compont.id + '" ></div>'); $row.append($compont); switch (compont.dataType) { case "user": $compont.spformselect({ layerUrl: top.$.rootUrl + '/LR_OrganizationModule/User/SelectOnlyForm', layerUrlW: 400, layerUrlH: 300, dataUrl: top.$.rootUrl + '/LR_OrganizationModule/User/GetListByUserIds' }); break; case "department": $compont.spselect({ type: 'tree', allowSearch: true }); $compont.spselectRefresh({ url: top.$.rootUrl + '/LR_OrganizationModule/Department/GetTree', param: {} }); break; case "company": $compont.spCompanySelect({}); break }return $compont } }, currentInfo: { init: function() { var $html = $('<div class="sp-custmerform-component" data-type="currentInfo" ><i  class="fa fa-book"></i>当前信息</div>'); return $html }, render: function($component) { $component[0].dfop = $component[0].dfop || { title: '当前信息', type: "currentInfo", table: '', field: "", proportion: '1', isHide: '0', dataType: 'user' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: '当前信息' })) }, property: function($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component); var _html = ''; _html += '<div class="sp-component-title">是否隐藏</div>'; _html += '<div class="sp-component-control"><div id="sp_component_isHide"></div></div>'; _html += '<div class="sp-component-title">类型选择</div>'; _html += '<div class="sp-component-control"><div id="sp_component_dataType"></div></div>'; $html.append(_html); $('#sp_component_isHide').spselect({ placeholder: false, data: [{ id: '0', text: '否' }, { id: '1', text: '是' }], value: 'id', text: 'text', select: function (item) { if (!!item) { dfop.isHide = item.id } else { dfop.isHide = '0' } } }); $('#sp_component_isHide').spselectSet(dfop.isHide); $('#sp_component_dataType').spselect({ data: [{ id: 'company', text: '当前公司' }, { id: 'department', text: '当前部门' }, { id: 'user', text: '当前用户ID' }, { id: 'username', text: '当前用户名' }, { id: 'time', text: '当前时间' }], value: 'id', text: 'text', placeholder: false, select: function (item) { dfop.dataType = item.id } }).spselectSet(dfop.dataType) }, renderTable: function(compont, $row) { var $compont = $('<input id="' + compont.id + '" readonly type="text"  class="form-control sp-currentInfo sp-currentInfo-' + compont.dataType + '" />'); var loginInfo = sp.clientdata.get(['userinfo']); switch (compont.dataType) { case 'company': $compont[0].spvalue = loginInfo.companyId; sp.clientdata.getAsync('company', { key: loginInfo.companyId, callback: function (_data) { $compont.val(_data.name) } }); break; case 'department': $compont[0].spvalue = loginInfo.departmentId; sp.clientdata.getAsync('department', { key: loginInfo.departmentId, callback: function (_data) { $compont.val(_data.name) } }); break; case 'user': $compont.val(loginInfo.realName); $compont[0].spvalue = loginInfo.userId; break; case 'username': $compont.val(loginInfo.realName); $compont[0].spvalue = loginInfo.realName; break; case 'time': $compont[0].spvalue = sp.formatDate(new Date(), 'yyyy-MM-dd hh:mm:ss'); $compont.val($compont[0].spvalue); break }if (compont.isHide == '1') { $row.hide() } $row.append($compont); return $compont } }, guid: { init: function() { var $html = $('<div class="sp-custmerform-component" data-type="guid" ><i  class="fa fa-info"></i>GUID</div>'); return $html }, render: function($component) { $component[0].dfop = $component[0].dfop || { title: 'GUID', type: "guid", table: '', field: "", proportion: '1', }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: 'GUID' })) }, property: function($component) { var dfop = $component[0].dfop; var $html = setComponentPropertyHtml($component) }, renderTable: function(compont, $row) { var $compont = $('<input id="' + compont.id + '" readonly type="text"  class="form-control sp-currentInfo sp-currentInfo-guid" />'); $compont[0].spvalue = sp.newGuid(); $compont.val($compont[0].spvalue); $row.hide(); $row.append($compont); return $compont } }, upload: { init: function() { var $html = $('<div class="sp-custmerform-component" data-type="upload" ><i class="fa fa-paperclip"></i>附件上传</div>'); return $html }, render: function($component) { $component[0].dfop = $component[0].dfop || { title: '附件上传', type: "upload", table: '', field: "", proportion: '1', verify: '' }; $component.html(getComponentRowHtml({ name: $component[0].dfop.title, text: '附件上传' })) }, property: function($component) { setComponentPropertyHtml($component) }, renderTable: function(compont, $row) { var $compont = $('<div id="' + compont.id + '"></div>'); $row.append($compont); $compont.spUploader(); return $compont } }, girdtable: { init: function() { var $html = $('<div class="sp-custmerform-component" data-type="girdtable" ><i class="fa fa-table"></i>编辑表格</div>'); return $html }, render: function($component) { $component[0].dfop = $component[0].dfop || { title: '编辑表格', table: '', type: "girdtable", proportion: '1', verify: '', minheight: 200, fieldsData: [], preloadDb: '', preloadTable: '' }; $component.html(getComponentRowHtml({ name: '编辑表格', text: '编辑表格' })) }, property: function($component) { var designerDfop = $component.parent()[0].dfop; var dfop = $component[0].dfop; var $html = $(".sp-custmerform-designer-layout-right .sp-scroll-box"); var _html = '<div class="sp-component-title">绑定表</div>'; _html += '<div class="sp-component-control"><div id="sp_component_table"></div></div>'; _html += '<div class="sp-component-title">组件标题</div>'; _html += '<div class="sp-component-control"><input id="sp_component_title" type="text" class="form-control" placeholder="必填项"/></div>'; _html += '<div class="sp-component-title">字段验证</div>'; _html += '<div class="sp-component-control"><div id="sp_component_verify"></div></div>'; _html += '<div class="sp-component-title">所占行比例</div>'; _html += '<div class="sp-component-control"><div id="sp_component_proportion"></div></div>'; _html += '<div class="sp-component-title">表格高度</div>'; _html += '<div class="sp-component-control"><input id="sp_component_minheight" type="text" class="form-control" placeholder="必填项"/></div>'; _html += '<div class="sp-component-title">预加载数据库</div>'; _html += '<div class="sp-component-control"><div id="sp_component_ydb"></div></div>'; _html += '<div class="sp-component-title">预加载数据表</div>'; _html += '<div class="sp-component-control"><div id="sp_component_ytable"></div></div>'; _html += '<div class="sp-component-control" style="text-align: center;padding-top: 10px;" ><a id="sp_fieldsData_set" class="btn btn-primary btn-block">设置表格字段</a></div>'; $html.html(_html); $('#sp_component_table').spselect({ data: designerDfop.dbTable, value: 'name', text: 'name', allowSearch: true, select: function (item) { if (!!item) { dfop.table = item.name } else { dfop.table = '' } } }); if (!!designerDfop.dbTable && designerDfop.dbTable.length > 0) { $('#sp_component_table').spselectSet(dfop.table || designerDfop.dbTable[0].name) } $html.find('#sp_component_title').val(dfop.title); $html.find('#sp_component_title').on('input propertychange', function () { var value = $(this).val(); $component.find('.sp-compont-title span').text(value); dfop.title = value }); $html.find('#sp_component_minheight').val(dfop.minheight); $html.find('#sp_component_minheight').on('input propertychange', function () { var value = $(this).val(); dfop.minheight = value }); $('#sp_component_verify').spselect({ data: verifyDatalist2, value: 'id', text: 'text', allowSearch: true, select: function (item) { if (!!item) { dfop.verify = item.id } else { dfop.verify = "" } } }); $('#sp_component_verify').spselectSet(dfop.verify); $('#sp_component_proportion').spselect({ data: [{ id: '1', text: '1' }, { id: '2', text: '1/2' }, { id: '3', text: '1/3' }, { id: '4', text: '1/4' }, { id: '5', text: '1/5' }, { id: '6', text: '1/6' }], placeholder: false, value: 'id', text: 'text', select: function (item) { if (!!item) { dfop.proportion = item.id } else { dfop.proportion = '1' } $component.css({ 'width': 100 / parseInt(dfop.proportion) + '%' }) } }); $('#sp_component_proportion').spselectSet(dfop.proportion); $('#sp_fieldsData_set').on('click', function () { top.formGridSetting = { fields: dfop.fieldsData, tableName: dfop.table, dbId: designerDfop.dbId, fieldMap: fieldMap }; sp.layerForm({ id: 'custmerForm_editgrid_index', title: '编辑表格选项', url: top.$.rootUrl + '/Utility/EditGridForm?keyValue=formGridSetting', width: 1000, height: 650, maxmin: true, btn: null, end: function () { top.formGridSetting = null } }) }); $('#sp_component_ytable').spselect({ value: 'name', text: 'name', title: 'tdescription', allowSearch: true, select: function (item) { if (!!item) { dfop.preloadTable = item.name } else { dfop.preloadTable = '' } } }).spselectSet(dfop.preloadTable); $('#sp_component_ydb').spselect({ url: top.$.rootUrl + '/LR_SystemModule/DatabaseLink/GetTreeList', type: 'tree', placeholder: '请选择数据库', allowSearch: true, select: function (item) { if (!item || item.hasChildren || item.id == -1) { dfop.preloadDb = ''; $('#sp_component_ytable').spselectRefresh({ url: '', data: [], }) } else { dfop.preloadDb = item.id; $('#sp_component_ytable').spselectRefresh({ url: top.$.rootUrl + '/LR_SystemModule/DatabaseTable/GetList', param: { databaseLinkId: dfop.preloadDb }, data: null, }) } } }).spselectSet(dfop.preloadDb) }, renderTable: function(compont, $row) { $row.find('.sp-form-item-title').remove(); $row.addClass('sp-form-item-grid'); var $compont = $('<div id="' + compont.id + '"></div>'); $row.append($compont); compont.hideData = []; var headData = toGirdheadData(compont.fieldsData, compont.hideData, $compont); if (!!compont.preloadDb && !!compont.preloadTable) { $compont.jfGrid({ headData: headData, isAutoHeight: true }); sp.httpAsync('GET', top.$.rootUrl + '/LR_SystemModule/DatabaseTable/GetTableDataAllList', { databaseLinkId: compont.preloadDb, tableName: compont.preloadTable }, function (data) { if ($compont.jfGridGet('rowdatas').length < 1) { var fieldMap = {}; $.each(compont.fieldsData, function (id, girdFiled) { if (!!girdFiled.field) { fieldMap[girdFiled.field.toLowerCase()] = girdFiled.field } }); var rowDatas = []; for (var i = 0, l = data.length; i < l; i++) { var _point = {}; for (var _field in data[i]) { _point[fieldMap[_field]] = data[i][_field] } rowDatas.push(_point) } $compont.jfGridSet('refreshdata', { rowdatas: rowDatas }) } }) } else { $compont.jfGrid({ headData: headData, isEdit: true, rowdatas: [{}], isAutoHeight: (compont.minheight == 0 ? true : false), height: compont.minheight }) } } }}var verifyDatalist = [{ id: "NotNull", text: "不能为空！" }, { id: "Num", text: "必须为数字！" }, { id: "NumOrNull", text: "数字或空！" }, { id: "Email", text: "必须为E-mail格式！" }, { id: "EmailOrNull", text: "E-mail格式或空！" }, { id: "EnglishStr", text: "必须为字符串！" }, { id: "EnglishStrOrNull", text: "字符串或空！" }, { id: "Phone", text: "必须电话格式！" }, { id: "PhoneOrNull", text: "电话格式或者空！" }, { id: "Fax", text: "必须为传真格式！" }, { id: "Mobile", text: "必须为手机格式！" }, { id: "MobileOrNull", text: "手机格式或者空！" }, { id: "MobileOrPhone", text: "电话格式或手机格式！" }, { id: "MobileOrPhoneOrNull", text: "电话格式或手机格式或空！" }, { id: "Uri", text: "必须为网址格式！" }, { id: "UriOrNull", text: "网址格式或空！" }]; var verifyDatalist2 = [{ id: "NotNull", text: "不能为空！" }]; function getComponentRowHtml(data) { var _html = '<div class="sp-compont-title"><span>' + data.name + '</span><div class="sp-compont-remove"><i  title="移除组件" class="del fa fa-close"></i></div></div><div class="sp-compont-value">' + data.text + '</div>'; return _html }; function setComponentPropertyHtml($component, verifyData) { var designerDfop = $component.parent()[0].dfop; var dfop = $component[0].dfop; var $html = $(".sp-custmerform-designer-layout-right .sp-scroll-box"); var _html = ''; _html += '<div class="sp-component-title">绑定表</div>'; _html += '<div class="sp-component-control"><div id="sp_component_table"></div></div>'; _html += '<div class="sp-component-title">绑定字段</div>'; _html += '<div class="sp-component-control"><div id="sp_component_field"></div></div>'; _html += '<div class="sp-component-title">组件标题</div>'; _html += '<div class="sp-component-control"><input id="sp_component_title" type="text" class="form-control" placeholder="必填项"/></div>'; if (!!verifyData) { _html += '<div class="sp-component-title">字段验证</div>'; _html += '<div class="sp-component-control"><div id="sp_component_verify"></div></div>' } _html += '<div class="sp-component-title">所占行比例</div>'; _html += '<div class="sp-component-control"><div id="sp_component_proportion"></div></div>'; $html.html(_html); var _field = dfop.field; $('#sp_component_field').spselect({ value: 'f_column', text: 'f_column', title: 'f_remark', allowSearch: true, select: function (item) { if (!!item) { dfop.field = item.f_column } else { dfop.field = '' } } }).spselectSet(_field); $('#sp_component_table').spselect({ data: designerDfop.dbTable || [], value: 'name', text: 'name', allowSearch: true, select: function (item) { if (!!item) { dfop.table = item.name; if (!!fieldMap[designerDfop.dbId + item.name]) { $('#sp_component_field').spselectRefresh({ data: fieldMap[designerDfop.dbId + item.name] }) } else { sp.httpAsync('GET', top.$.rootUrl + '/LR_SystemModule/DatabaseTable/GetFieldList', { databaseLinkId: designerDfop.dbId, tableName: item.name }, function (data) { fieldMap[designerDfop.dbId + item.name] = data; $('#sp_component_field').spselectRefresh({ data: fieldMap[designerDfop.dbId + item.name] }) }) } } else { $('#sp_component_field').spselectRefresh({ data: [] }); dfop.table = '' } } }); if (!!designerDfop.dbTable && designerDfop.dbTable.length > 0) { $('#sp_component_table').spselectSet(dfop.table || designerDfop.dbTable[0].name) } $html.find('#sp_component_title').val(dfop.title); $html.find('#sp_component_title').on('input propertychange', function () { var value = $(this).val(); $component.find('.sp-compont-title span').text(value); dfop.title = value }); if (!!verifyData) { $('#sp_component_verify').spselect({ data: verifyData, value: 'id', text: 'text', allowSearch: true, select: function (item) { if (!!item) { dfop.verify = item.id } else { dfop.verify = "" } } }); $('#sp_component_verify').spselectSet(dfop.verify) } $('#sp_component_proportion').spselect({ data: [{ id: '1', text: '1' }, { id: '2', text: '1/2' }, { id: '3', text: '1/3' }, { id: '4', text: '1/4' }, { id: '6', text: '1/6' }], placeholder: false, value: 'id', text: 'text', select: function (item) { if (!!item) { dfop.proportion = item.id } else { dfop.proportion = '1' } $component.css({ 'width': 100 / parseInt(dfop.proportion) + '%' }) } }); $('#sp_component_proportion').spselectSet(dfop.proportion); return $html }; function setDatasource(dfop) { $('#sp_component_dfvalue').spselect({ allowSearch: true, select: function (item) { if (!!item) { if (dfop.dataSource == '0') { dfop.dfvalue = item.id } else { var vlist = dfop.dataSourceId.split(','); dfop.dfvalue = item[vlist[2]] } } else { dfop.dfvalue = '' } } }).spselectSet(dfop.dfvalue); $('#sp_component_dataItemCode').spselect({ allowSearch: true, url: top.$.rootUrl + '/LR_SystemModule/DataItem/GetClassifyTree', type: 'tree', value: 'value', select: function (item) { if (!!item) { if (dfop.dataSourceId != item.id) { dfop.dfvalue = ''; dfop.itemCode = item.value } sp.clientdata.getAllAsync('dataItem', { code: item.value, callback: function (dataes) { var list = []; $.each(dataes, function (_index, _item) { if (_item.parentId == "0") { list.push({ id: _item.value, text: _item.text, title: _item.text, k: _index }) } }); $('#sp_component_dfvalue').spselectRefresh({ value: "id", text: "text", title: "title", data: list, url: '' }) } }) } else { dfop.itemCode = ''; $('#sp_component_dfvalue').spselectRefresh({ url: '', data: [] }) } } }); $('#sp_component_dataSourceId1').spselect({ title: 'text', text: 'text', value: 'value', allowSearch: true, select: function (item) { if (item) { var vlist = dfop.dataSourceId.split(','); vlist[1] = item.value; dfop.dataSourceId = String(vlist); if (vlist[2] != '') { sp.clientdata.getAllAsync('sourceData', { code: vlist[0], callback: function (dataes) { var v = dfop.dfvalue; $('#sp_component_dfvalue').spselectRefresh({ value: vlist[2], text: vlist[1], title: vlist[1], url: '', data: dataes }); $('#sp_component_dfvalue').spselectSet(v) } }) } } } }); $('#sp_component_dataSourceId2').spselect({ title: 'text', text: 'text', value: 'value', allowSearch: true, select: function (item) { if (item) { var vlist = dfop.dataSourceId.split(','); vlist[2] = item.value; dfop.dataSourceId = String(vlist); if (vlist[1] != '') { sp.clientdata.getAllAsync('sourceData', { code: vlist[0], callback: function (dataes) { var v = dfop.dfvalue; $('#sp_component_dfvalue').spselectRefresh({ value: vlist[2], text: vlist[1], title: vlist[1], url: '', data: dataes }); $('#sp_component_dfvalue').spselectSet(v) } }) } } } }); $('#sp_component_relation_field').spselect({ title: 'text', text: 'text', value: 'value', allowSearch: true, select: function (item) { if (!!item) { dfop.relation_field = item.value } else { dfop.relation_field = '' } } }).spselectSet(dfop.relation_field); $('#sp_component_dataSourceId').spselect({ allowSearch: true, url: top.$.rootUrl + '/LR_SystemModule/DataSource/GetList', value: 'F_Code', text: 'F_Name', title: 'F_Name', select: function (item) { if (item) { if (dfop.dataSourceId != '') { var vlist = dfop.dataSourceId.split(','); if (vlist.length < 3 || vlist[0] != item.F_Code) { vlist[1] = ''; vlist[2] = ''; dfop.dataSourceId = item.F_Code + ',,'; dfop.dfvalue = '' } } else { dfop.dataSourceId = item.F_Code + ',,'; dfop.dfvalue = '' } sp.httpAsync('GET', top.$.rootUrl + '/LR_SystemModule/DataSource/GetDataColName', { code: item.F_Code }, function (data) { var fieldData = []; for (var i = 0, l = data.length; i < l; i++) { var id = data[i]; var selectpoint = { value: id, text: id }; fieldData.push(selectpoint) } var vlist = dfop.dataSourceId.split(','); $('#sp_component_dataSourceId1').spselectRefresh({ data: fieldData, placeholder: false }); $('#sp_component_dataSourceId1').spselectSet(vlist[1] || fieldData[0].value); $('#sp_component_dataSourceId2').spselectRefresh({ data: fieldData, placeholder: false }); $('#sp_component_dataSourceId2').spselectSet(vlist[2] || fieldData[0].value); $('#sp_component_relation_field').spselectRefresh({ data: fieldData, placeholder: false }) }) } else { dfop.dfvalue = ''; dfop.dataSourceId = ''; $('#sp_component_dataSourceId1').spselectRefresh({ data: [], placeholder: '请选择' }); $('#sp_component_dataSourceId2').spselectRefresh({ data: [], placeholder: '请选择' }); dfop.relation = ''; dfop.relation_field = ''; $('#sp_component_relation_field').spselectRefresh({ data: [], placeholder: '请选择' }); $('#sp_component_dfvalue').spselectRefresh({ url: '', data: [] }) } } }); if (dfop.dataSource == "0") { $('#sp_component_dataItemCode').spselectSet(dfop.itemCode) } else { var valuelist = dfop.dataSourceId.split(','); $('#sp_component_dataSourceId').spselectSet(valuelist[0]) } $('#sp_component_dataSource').spselect({ data: [{ id: '0', text: '数据字典' }, { id: '1', text: '数据源' }], value: 'id', text: 'text', placeholder: false, select: function (item) { if (dfop.dataSource != item.id) { dfop.dfvalue = ''; dfop.dataSourceId = ''; dfop.itemCode = ''; $('#sp_component_dataItemCode').spselectSet(''); $('#sp_component_dfvalue').spselectRefresh({ url: '', data: [] }) } dfop.dataSource = item.id; if (dfop.dataSource == '0') { $('.dataSourceId').hide(); $('#sp_component_dataItemCode1').show(); $('.sp_component_relation').hide(); $('.sp_component_relation_field').hide() } else { $('.dataSourceId').show(); $('#sp_component_dataItemCode1').hide(); $('.sp_component_relation').show() } } }).spselectSet(dfop.dataSource) }; function toGirdheadData(data, hideData, $compont) { var resdata = []; var mapdata = {}; var mIds = {}; var pIds = {}; var maprowdatas = {}; data = data || []; $.each(data, function (_index, item) { var isAdd = true; var point = { id: item.id, label: item.name, name: item.field || sp.newGuid(), width: parseInt(item.width || 100), align: item.align || "left" }; switch (item.type) { case 'input': point.edit = { type: 'input' }; break; case 'select': point.edit = { type: 'select', }; if (item.dataSource == "0") { point.edit.datatype = 'dataItem'; point.edit.code = item.itemCode } else { point.edit.code = item.dataSourceId; point.edit.datatype = 'dataSource'; point.edit.op = { value: item.saveField, text: item.showField, title: item.showField } } break; case 'radio': point.edit = { type: 'radio', dfvalue: item.dfvalue }; if (item.dataSource == "0") { point.edit.datatype = 'dataItem'; point.edit.code = item.itemCode } else { point.edit.datatype = 'dataSource'; point.edit.code = item.dataSourceId; point.edit.text = item.showField; point.edit.value = item.saveField } break; case 'checkbox': point.edit = { type: 'checkbox', dfvalue: item.dfvalue }; if (item.dataSource == "0") { point.edit.datatype = 'dataItem'; point.edit.code = item.itemCode } else { point.edit.datatype = 'dataSource'; point.edit.code = item.dataSourceId; point.edit.text = item.showField; point.edit.value = item.saveField } break; case 'datetime': point.edit = { type: 'datatime', dateformat: (item.datetime == "date" ? '0' : '1') }; break; case 'layer': var layerData = []; $.each(item.layerData, function (_index, _item) { var _point = { label: _item.label, name: _item.name, width: parseInt(_item.width || 100), align: _item.align }; layerData.push(_point) }); point.edit = { type: 'layer', change: function (data, rownum, selectData) { $.each(item.layerData, function (_index, _item) { data[_item.value] = selectData[_item.name] }); $compont.jfGridSet('updateRow', rownum) }, op: { width: item.layerW, height: item.layerH, colData: layerData } }; if (item.dataSource == "0") { point.edit.op.url = top.$.rootUrl + '/LR_SystemModule/DataItem/GetDetailList'; point.edit.op.param = { itemCode: item.itemCode } } else { point.edit.op.url = top.$.rootUrl + '/LR_SystemModule/DataSource/GetDataTable'; point.edit.op.param = { itemCode: item.dataSourceId } }; break; case 'guid': isAdd = false; break }if (isAdd) { mIds[item['id']] = 1; var parentId = item['parentId'] || '0'; mapdata[parentId] = mapdata[parentId] || []; mapdata[parentId].push(point); if (mIds[parentId] == 1) { delete pIds[parentId] } else { pIds[parentId] = 1 } if (pIds[item['id']] == 1) { delete pIds[item['id']] } } }); for (var id in pIds) { _fn(resdata, id) } function _fn(_data, vparentId) { var pdata = mapdata[vparentId] || []; for (var j = 0, l = pdata.length; j < l; j++) { var _item = pdata[j]; _item.children = []; _fn(_item.children, _item['id']); if (_item.children.length == 0) { delete _item['children'] } _data.push(_item); maprowdatas[_item['id']] = _item } } return resdata } function htmlEncode(text) { text = text || ""; text = text.replace(/%/g, "{@bai@}"); text = text.replace(/ /g, "{@kong@}"); text = text.replace(/</g, "{@zuojian@}"); text = text.replace(/>/g, "{@youjian@}"); text = text.replace(/&/g, "{@and@}"); text = text.replace(/\"/g, "{@shuang@}"); text = text.replace(/\'/g, "{@dan@}"); text = text.replace(/\t/g, "{@tab@}"); text = text.replace(/\+/g, "{@jia@}"); return text } function htmlDecode(text) { text = text || ""; text = text.replace(/{@bai@}/g, "%"); text = text.replace(/{@dan@}/g, "'"); text = text.replace(/{@shuang@}/g, "\""); text = text.replace(/{@kong@}/g, " "); text = text.replace(/{@zuojian@}/g, "<"); text = text.replace(/{@youjian@}/g, ">"); text = text.replace(/{@and@}/g, "&"); text = text.replace(/{@tab@}/g, "\t"); text = text.replace(/{@jia@}/g, "+"); return text; }}) (jQuery, top.sp);
