(function ($, sp) { "use strict"; var msgList = {}; var imChat; var isLoaded = -1; var loadingMsg = {}; var loadingMsg2 = {}; var _im = { init: function () { _im.registerServer(); _im.connect() }, connect: function () { var loginInfo = sp.clientdata.get(['userinfo']); $.ajax({ url: loginInfo.imUrl + "/hubs", type: "get", dataType: "text", success: function (data) { eval(data); $.connection.hub.url = loginInfo.imUrl; $.connection.hub.qs = { "userId": loginInfo.userId }; imChat = $.connection.ChatsHub; _im.registerClient(); $.connection.hub.start().done(function () { _im.afterSuccess() }); $.connection.hub.disconnected(function () { _im.disconnected() }) }, error: function (XMLHttpRequest, textStatus, errorThrown) { isLoaded = 0 }, }) }, afterSuccess: function () { isLoaded = 1; $('.sp-im-bell').show() }, disconnected: function () { isLoaded = 0 }, registerClient: function () { if (imChat) { imChat.client.revMsg = function (userId, msg, dateTime, isSystem) { if (!loadingMsg2[userId]) { var point = { userId: userId, content: msg, time: dateTime, isSystem: isSystem || 0 }; addMsgList(userId, point); sp.im.revMsg && sp.im.revMsg(userId, msg, dateTime, isSystem || 0) } } } }, registerServer: function () { _im.sendMsg = function (userId, msg) { if (isLoaded == 1) { imChat.server.sendMsg(userId, msg, 0) } else if (isLoaded == -1) { setTimeout(function () { _im.sendMsg(userId, msg) }, 100) } } } }; function addMsgList(userId, item) { msgList[userId] = msgList[userId] || []; if (loadingMsg[userId]) { setTimeout(function () { addMsgList(userId, item) }, 100) } else { msgList[userId].push(item) } } sp.im = { addContacts: function (userId) { sp.httpAsync('Post', top.$.rootUrl + '/LR_IM/IMMsg/AddContact', { otherUserId: userId }, function (data) { }) }, getContacts: function (callback) { setTimeout(function () { sp.httpAsync('GET', top.$.rootUrl + '/LR_IM/IMMsg/GetContactsList', {}, function (data) { data = data || []; _im.init(); callback(data) }) }, 1000) }, updateContacts: function (userId) { sp.httpAsync('Post', top.$.rootUrl + '/LR_IM/IMMsg/UpdateContactState', { otherUserId: userId }, function (data) { }) }, sendMsg: function (userId, msg) { var time = ""; var loginInfo = sp.clientdata.get(['userinfo']); var point = { userId: loginInfo.userId, content: msg, time: sp.getDate('yyyy-MM-dd hh:mm:ss'), isSystem: 0 }; addMsgList(userId, point); sp.httpAsync('Post', top.$.rootUrl + '/LR_IM/IMMsg/SendMsg', { userId: userId, content: msg }, function (data) { _im.sendMsg(userId, msg) }); if (msgList[userId].length > 1) { if (sp.parseDate(point.time).DateDiff('s', msgList[userId][msgList[userId].length - 2].time) > 60) { time = point.time } } else { time = point.time } return time }, getMsgList: function (userId, callback, isGetMsgList) { msgList[userId] = msgList[userId] || []; loadingMsg[userId] = true; if (msgList[userId].length == 0 && isGetMsgList) { loadingMsg2[userId] = true; sp.httpAsync('GET', top.$.rootUrl + '/LR_IM/IMMsg/GetMsgList', { userId: userId }, function (data) { msgList[userId] = msgList[userId] || []; data = data || []; var len = data; if (len > 0) { for (var i = len - 1; i >= 0; i--) { var item = data[i]; var point = { userId: _item.F_SendUserId, content: _item.F_Content, time: _item.F_CreateDate, isSystem: _item.F_IsSystem || 0 }; msgList[userId].push(point) } } callback(msgList[userId]); loadingMsg[userId] = false; loadingMsg2[userId] = false }) } else { callback(msgList[userId]); loadingMsg[userId] = false } }, registerRevMsg: function (callback) { sp.im.revMsg = callback } } })(jQuery, top.sp);
